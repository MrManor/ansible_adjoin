---
- name: Add system packages to packages list
  set_fact:
    packages: "{{ packages |default([]) + [item] }}"
  with_items:
    - realmd
    - sssd
    - oddjob
    - oddjob-mkhomedir
    - adcli
    - samba-common
    - samba-common-tools
    - krb5-workstation
    - expect
    - python3-pexpect

- name: Install required packages
  package:
    name: "{{ packages }}"

#- name: Sync time with AD
  # actually a nice idea - but ntpdate is depricated. Rewrite to chrony some day
  #shell: systemctl stop ntpd ; ntpdate {{ ad_server.ip }} && systemctl start ntpd
  #register: timesync_result
  #changed_when: false

- name: Checking Domain Join status
  shell: "/usr/sbin/realm discover {{ ad_server.domain }}"
  register: ad_status
  changed_when: False

- debug:
    msg: "Not AD configured for {{ ad_server.domain }} yet."
  when: not ad_status.stdout is search('configured:.*kerberos-member')
  
- name: Join linux into domain
  expect:
    command: /bin/bash -c "/usr/sbin/realm join --user={{ ad_user }} --computer-ou={{ ou_membership }}' {{ ad_server.domain }} "
    responses:
      Password.*: "{{ ad_pass }}"
  when: not ad_status.stdout is search('configured:.*kerberos-member')

- name: Adjust sssd to our preferences
  lineinfile: 
    state: present
    dest: /etc/sssd/sssd.conf
    regexp: '^{{ item.search }}'
    line: '{{ item.replace }}'
  with_items:
    - { search: 'use_fully_qualified_names', replace: 'use_fully_qualified_names = False' }
    - { search: 'fallback_homedir', replace: 'fallback_homedir = /home/%u' }
    - { search: 'krb5_store_password_if_offline', replace: 'krb5_store_password_if_offline = False' }
  notify:
      - restart sssd

- name: Adjust kerberos to our preferences
  lineinfile: 
    state: present
    dest: /etc/krb5.conf
    insertafter: 'libdefaults'
    firstmatch: yes
    regexp: '^(# )?default_realm'
    line: "    default_realm = {{ ad_server.domain|upper }}"
  notify:
      - restart sssd

- name: Set kerberos default realm
  template:
    src: krb5_realms.j2
    dest: /etc/krb5.conf.d/realms
  notify:
      - restart sssd
          
# Keep of my sshd_config - configured elsewhere
#- name: Allow Password Auth for all users except root
  #lineinfile: 
     #backup: yes
     #state: present
     #dest: /etc/ssh/sshd_config
     #regexp: '^{{ item.search }}'
     #line: '{{ item.replace }}'
  #with_items:      
      #- { search: 'PasswordAuthentication', replace: 'PasswordAuthentication yes' }
  #notify:
      #- restart sshd

- name: ensure Domain Admins can use sudo
  copy:
    dest: /etc/sudoers.d/domadm
    content: |
      %domain\ admins ALL=(ALL:ALL) ALL
      Defaults:%localadm       !requiretty
    owner: root
    group: root
    mode: 0400

- name: Configure SSH for GSSAPIAuthentication
  lineinfile:
    path: /etc/ssh/ssh_config
    regexp: '^#?\s*?GSSAPIAuthentication'
    line: '   GSSAPIAuthentication yes'

- name: Configure SSH deamon for GSSAPIAuthentication
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?\s*?GSSAPIAuthentication'
    line: 'GSSAPIAuthentication yes'
    insertafter: '^#GSSAPI options'
  notify:
    - restart sshd
